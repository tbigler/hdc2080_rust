// HDC2080 provides one pin to define address -> two HDC2080 per I2C bus possible
pub const HDC2080_I2C_ADDR_VDD: u8 = 0x41;
pub const HDC2080_I2C_ADDR_GND: u8 = 0x40;

// Register Address Definitions

pub const HDC2080_REGADDR_TEMPERATURE_LOW: u8 = 0x00;
pub const HDC2080_REGADDR_TEMPERATURE_HIGH: u8 = 0x01;
pub const HDC2080_REGADDR_HUMIDITY_LOW: u8 = 0x02;
pub const HDC2080_REGADDR_HUMIDITY_HIGH: u8 = 0x03;
pub const HDC2080_REGADDR_INTERRUPT_DRDY: u8 = 0x04;
pub const HDC2080_REGADDR_TEMPERATURE_MAX: u8 = 0x05;
pub const HDC2080_REGADDR_HUMIDITY_MAX: u8 = 0x06;
pub const HDC2080_REGADDR_INTERRUPT_ENABLE: u8 = 0x07;
pub const HDC2080_REGADDR_TEMP_OFFSET_ADJUST: u8 = 0x08;
pub const HDC2080_REGADDR_HUM_OFFSET_ADJUST: u8 = 0x09;
pub const HDC2080_REGADDR_TEMP_THR_LOW: u8 = 0x0A;
pub const HDC2080_REGADDR_TEMP_THR_HIGH: u8 = 0x0B;
pub const HDC2080_REGADDR_RH_THR_LOW: u8 = 0x0C;
pub const HDC2080_REGADDR_RH_THR_HIGH: u8 = 0x0D;
pub const HDC2080_REGADDR_RESET_INT_CONF: u8 = 0x0E;
pub const HDC2080_REGADDR_MEASUREMENT_CONFIG: u8 = 0x0F;
pub const HDC2080_REGADDR_MANUFACTURER_ID_LOW: u8 = 0xFC;
pub const HDC2080_REGADDR_MANUFACTURER_ID_HIGH: u8 = 0xFD;
pub const HDC2080_REGADDR_DEVICE_ID_LOW: u8 = 0xFE;
pub const HDC2080_REGADDR_DEVICE_ID_HIGH: u8 = 0xFF;

// Register Masks

// Address 0x04 Interrupt DRDY Register
pub const HDC2080_MASK_INTDRDY_DRDY_STATUS: u8 = 0x80;
pub const HDC2080_MASK_INTDRDY_TH_STATUS: u8 = 0x40;
pub const HDC2080_MASK_INTDRDY_TL_STATUS: u8 = 0x20;
pub const HDC2080_MASK_INTDRDY_HH_STATUS: u8 = 0x10;
pub const HDC2080_MASK_INTDRDY_HL_STATUS: u8 = 0x08;

// Address 0x07 Interrupt Enable Register
pub const HDC2080_MASK_INTEN_DRDY_ENABLE: u8 = 0x80;
pub const HDC2080_MASK_INTEN_TH_ENABLE: u8 = 0x40;
pub const HDC2080_MASK_INTEN_TL_ENABLE: u8 = 0x20;
pub const HDC2080_MASK_INTEN_HH_ENABLE: u8 = 0x10;
pub const HDC2080_MASK_INTEN_HL_ENABLE: u8 = 0x08;

// Address 0x0E Reset and DRDY/INT Configuration Register
pub const HDC2080_MASK_INTCONF_SOFT_RESET: u8 = 0x80;
pub const HDC2080_MASK_INTCONF_AMM: u8 = 0b0111_0000;
pub const HDC2080_MASK_INTCONF_HEAT_EN: u8 = 0x08;
pub const HDC2080_MASK_INTCONF_DRDYINT_EN: u8 = 0x04;
pub const HDC2080_MASK_INTCONF_INT_POL: u8 = 0x02;
pub const HDC2080_MASK_INTCONF_INT_MODE: u8 = 0x01;

// Address 0x0F Measurement Configuration Register
pub const HDC2080_MASK_MEASCONF_TRES: u8 = 0b1100_0000;
pub const HDC2080_MASK_MEASCONF_HRES: u8 = 0b0011_0000;
pub const HDC2080_MASK_MEASCONF_MEAS_CONF: u8 = 0b0000_0110;
pub const HDC2080_MASK_MEASCONF_MEAS_TRIG: u8 = 0x01;

// Register Field Settings

pub const HDC2080_FIELD_INTCONF_NORMAL_MODE: u8 = 0b0000_0000;
pub const HDC2080_FIELD_INTCONF_SOFT_RESET: u8 = 0b1000_0000;
pub const HDC2080_FIELD_INTCONF_AMM_DISABLED: u8 = 0b0000_0000;
pub const HDC2080_FIELD_INTCONF_AMM_1_120: u8 = 0b0001_0000;
pub const HDC2080_FIELD_INTCONF_AMM_1_60: u8 = 0b0010_0000;
pub const HDC2080_FIELD_INTCONF_AMM_1_10: u8 = 0b0011_0000;
pub const HDC2080_FIELD_INTCONF_AMM_1_5: u8 = 0b0100_0000;
pub const HDC2080_FIELD_INTCONF_AMM_1: u8 = 0b0101_0000;
pub const HDC2080_FIELD_INTCONF_AMM_2: u8 = 0b0110_0000;
pub const HDC2080_FIELD_INTCONF_AMM_5: u8 = 0b0111_0000;
pub const HDC2080_FIELD_INTCONF_HEATER_ON: u8 = 0b0000_1000;
pub const HDC2080_FIELD_INTCONF_HEATER_OFF: u8 = 0b0000_0000;
pub const HDC2080_FIELD_INTCONF_DRDYPIN_HIGHZ: u8 = 0b0000_0000;
pub const HDC2080_FIELD_INTCONF_DRDYPIN_EN: u8 = 0b0000_0100;
pub const HDC2080_FIELD_INTCONF_INTPOL_LOW: u8 = 0b0000_0000;
pub const HDC2080_FIELD_INTCONF_INTPOL_HIGH: u8 = 0b0000_0010;
pub const HDC2080_FIELD_INTCONF_INTMODE_LEVEL: u8 = 0b0000_0000;
pub const HDC2080_FIELD_INTCONF_INTMODE_COMP: u8 = 0b0000_0001;

pub const HDC2080_FIELD_MEASCONF_TRES_14BIT: u8 = 0b0000_0000;
pub const HDC2080_FIELD_MEASCONF_TRES_11BIT: u8 = 0b0100_0000;
pub const HDC2080_FIELD_MEASCONF_TRES_9BIT: u8 = 0b1000_0000;
pub const HDC2080_FIELD_MEASCONF_HRES_14BIT: u8 = 0b0000_0000;
pub const HDC2080_FIELD_MEASCONF_HRES_11BIT: u8 = 0b0001_0000;
pub const HDC2080_FIELD_MEASCONF_HRES_9BIT: u8 = 0b0010_0000;
pub const HDC2080_FIELD_MEASCONF_HUM_AND_TEMP: u8 = 0b0000_0000;
pub const HDC2080_FIELD_MEASCONF_TEMP_ONLY: u8 = 0b0000_0010;
pub const HDC2080_FIELD_MEASCONF_MEAS_TRIGGER: u8 = 0b0000_0001;
